---

- name : installation de mediawiki
  become: true
  hosts: mediawiki
  tasks:

# UPDATE
    - name: update
      apt:
        name: "*"
        state: latest

# UPGRADE
    - name: upgrade
      apt:
        name: "*"
        state: latest

# PHP et GIT
    - name: install php et git
      package:
        name: "{{ item }}"
        state: present
      loop:
        - php
        - php-mysql
        - php-xml
        - php-mbstring
        - git

# APACHE
    - name: install apache2
      package:
        name: apache2
        state: present

    - name: create apache2 config
      template:
        src: templates/apache2/default.j2
        dest: /etc/apache2/sites-available/default
      notify: restart apache2



# MySQL
#MySQL
    - name: Install MySQL
      package:
        name: "{{ item }}"
        state: present
      loop:
        - mysql-server
        - python3-mysqldb

    - name: Generate new root password
      command: openssl rand -hex 7
      args:
        creates: /root/.my.cnf
      register: mysql_new_root_pass

    - name: Remove anonymous users
      mysql_user:
        name: ""
        state: absent
      when: mysql_new_root_pass.changed

    - name: Remove test database
      mysql_db:
        name: test
        state: absent
      when: mysql_new_root_pass.changed

    - name: Output new root password
      debug:
        msg: "New root password is {{mysql_new_root_pass.stdout}}"
      when: mysql_new_root_pass.changed

    - name: Update root password
      mysql_user:
        name: root
        host: "{{ item }}"
        password: "{{ mysql_new_root_pass.stdout }}"
      loop:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost
      when: mysql_new_root_pass.changed

    - name: Create my.cnf
      template:
        src: templates/mysql/my.cnf.j2
        dest: /root/.my.cnf
      when: mysql_new_root_pass.changed





#    - name: update root password

    - name: create my.cnf
      template:
        src: templates/mysql/my.cnf.j2
        dest: /root/.my.cnf
      when: mysql_new_root_pass.changed


    #Création bdd et user
    - name: Create MySQL DB
      mysql_db:
        name: wikiFV
        state: present

    - name: Create MySQL user
      mysql_user:
        name: userwiki
        host: localhost
        password: az
        priv: wikidb.*:ALL


    # deplace directory mysql
    - name: "stop mysql service"
      service:
        name: mysql
        state: stopped


    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: /var/lib/mysql
        dest: /mnt/log
        remote_src: yes
        owner: mysql
        group: mysql
        mode: '0700'
    
    - name: stat mysql.bak
      stat: path=/var/lib/mysql.bak/
      register: mysql_bak
  
    - name: backup mysql
      command: mv /var/lib/mysql/ /var/lib/mysql.bak/
      when: not mysql_bak.stat.exists
      

    - name: "edit mysql.conf"
      lineinfile:
        dest: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^# datadir'
        line: 'datadir     = /mnt/log/mysql'

    - name: "edit apparmor alias"
      lineinfile:
        dest: /etc/apparmor.d/tunables/alias
        regexp: '^alias'
        line: 'alias /var/lib/mysql/ -> /mnt/log/mysql,'
    
    - name: "restart apparmor"
      service:
        name: apparmor
        state: restarted

    # need to pass the script's environment check
    - name : create directory structure mysql
      file:
        path: /var/lib/mysql/mysql
        state: directory
      notify: restart mysql


    - name: Remove directory
      file:
        path: /var/lib/mysql.bak
        state: absent

    # directory of appli
    - name : directory appli
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - /home/appli
        - /home/appli/MWA_mediawiki
        - /home/appli/MWA_mediawiki/LIVR
        - /home/appli/MWA_mediawiki/LIVR/01.00.00

    - name: git repo
      get_url:
        url: "{{ item }}"
 #       return_content: true
        dest: /tmp
      loop:
        - https://github.com/Bubu25/Projet-MEP-MediaWiki/raw/Andres-develop/INPUT/PACKAGE/wikidevops.tar.gz
        - https://github.com/Bubu25/Projet-MEP-MediaWiki/raw/Andres-develop/INPUT/PACKAGE/dump_image.tar.gz
        - https://github.com/Bubu25/Projet-MEP-MediaWiki/raw/Andres-develop/INPUT/PACKAGE/LoGo.tar.gz
        - https://github.com/Bubu25/Projet-MEP-MediaWiki/raw/Andres-develop/INPUT/PACKAGE/Relivraison_24052021.tar.gz
      #register: wp_checksum

    - name: untar package
      unarchive:
        src: "{{ item }}"
        dest: /home/appli/MWA_mediawiki/LIVR
        remote_src: yes
      loop:
        - /tmp/wikidevops.tar.gz
        - /tmp/dump_image.tar.gz
        - /tmp/LoGo.tar.gz
        - /tmp/Relivraison_24052021.tar.gz        
        #creates: yes

    - name: chmod
      file: 
        dest: /home/appli/MWA_mediawiki/LIVR/
        owner: root
        group: www-data 
        mode: 0775 
        recurse: yes


    - name: création du lien symbolique
      file:
        src: /home/appli/MWA_mediawiki/LIVR/wikidevops
        dest: /var/www/html/wikidevops
        state: link
      notify: restart apache2

   
# HANDLERS
  handlers:
    - name: restart apache2
      service:
        name: apache2
        state : restarted

    - name: restart mysql
      service:
        name: mysql
        state: restarted
    
...

