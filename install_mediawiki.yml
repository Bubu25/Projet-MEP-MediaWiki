---

- name : installation de mediawiki
  become: true
  hosts: mediawiki
  tasks:

# UPDATE
    - name: update
      apt:
        name: "*"
        state: latest

# UPGRADE
    - name: upgrade
      apt:
        name: "*"
        state: latest

# UNZIP
    - name: install unzip package
      package:
        name: unzip
        state: present

# PHP et GIT
    - name: install php et git
      package:
        name: "{{ item }}"
        state: present
      loop:
        - php
        - php-mysql
        - php-xml
        - php-mbstring
        - git

# MySQL
    - name: install mysql
      package:
        name: "{{ item }}"
        state: present
      loop:
        - mysql-server
        - python3-mysqldb

    - name: generate new root password
      command: openssl rand -hex 10
      args:
        creates: /root/.my.cnf
      register: mysql_new_root_pass

    - name: remove anonymous users
      mysql_user:
        name: ""
        state: absent
      when: mysql_new_root_pass.changed

    - name: remove test database
      mysql_db:
        name: test
        state: absent
      when: mysql_new_root_pass.changed

    - name: output new root password
      debug:
        msg: "New root password is {{mysql_new_root_pass.stdout}}"
      when: mysql_new_root_pass.changed

#    - name: update root password

    - name: create my.cnf
      template:
        src: templates/mysql/my.cnf.j2
        dest: /root/.my.cnf
      when: mysql_new_root_pass.changed

# APACHE
    - name: install apache2
      package:
        name: apache2
        state: present

    - name: create apache2 config
      template:
        src: templates/apache2/default.j2
        dest: /etc/apache2/sites-available/default
      notify: restart apache2

#    - name: create project folder

# deplacement de la base de donnÃ©e
    
    - name: "stop mysql service"
      service:
        name: mysql
        state: stopped


    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: /var/lib/mysql
        dest: /mnt/log
        remote_src: yes
        owner: mysql
        group: mysql
        mode: '0700'
  

      
    - name : create directory in File System
      file:
        path: /mnt/log
        state: directory

    - name: "edit mysql.conf"
      lineinfile:
        dest: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^# datadir'
        line: 'datadir     = /mnt/log/mysql'

    - name: "edit apparmor alias"
      lineinfile:
        dest: /etc/apparmor.d/tunables/alias
        regexp: '^alias'
        line: 'alias /var/lib/mysql/ -> /mnt/log/mysql,'
    
    - name: "restart apparmor"
      service:
        name: apparmor
        state: restarted

    # need to pass the script's environment check
    - name : create directory structure mysql
      file:
        path: /var/lib/mysql/mysql
        state: directory
      notify: restart mysql
    



# HANDLERS
  handlers:
    - name: restart apache2
      service:
        name: apache2
        state : restarted
    
    - name: restart mysql
      service:
        name: mysql
        state: restarted

